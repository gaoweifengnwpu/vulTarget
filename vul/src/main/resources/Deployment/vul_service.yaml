apiVersion: v1
kind: Service
metadata:
  name: vul
spec:
  selector:
    app: vul
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
#在 Service 的 selector 字段中指定与 Deployment 中的 template.metadata.labels 匹配的标签，从而将 Service 关联到 Deployment。
#例如上面的示例中，Service 的 selector 使用 app: vul，与 Deployment 中的 template.metadata.labels 匹配。
#  这样，当 Deployment 创建并运行 Pod 时，Service 将根据其 selector 将请求路由到相应的 Pod，
#  从而实现应用程序的访问。Service 可以通过 ClusterIP、NodePort、LoadBalancer 等方式暴露应用程序，使其可以从集群内部或外部访问。
#  kubectl apply -f ./run-my-nginx.yaml
#  Kubernetes Service是集群中提供相同功能的一组Pod的抽象表达。 当每个 Service 创建时，会被分配一个唯一的 IP地址（也称为clusterIP）。
#  这个IP地址与Service的生命周期绑定在一起，只要 Service 存在，它就不会改变。
#  kubectl get svc vul
#  kubectl create ns vul