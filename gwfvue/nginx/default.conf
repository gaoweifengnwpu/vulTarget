# 每100毫秒处理一个请求。这意味着，自上一个请求处理完后，若后续100毫秒内又有请求到达，将拒绝处理该请求。

# limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;
server {
#     listen       8888;
#     listen  [::]:8888;
    listen       443 ssl;
    server_name  _;
    # 配置服务器证书
    ssl_certificate /etc/server.crt;
    # 配置服务器私钥
    ssl_certificate_key /etc/server.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
     # 优先选择服务端的加密套件
    ssl_prefer_server_ciphers on;
    ssl_ecdh_curve X25519:P-256;
    ssl_session_tickets off;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    location /users {
#                 limit_req zone=myRateLimit;
                # 把 /api 路径下的请求转发给真正的后端服务器
                proxy_pass http://192.168.108.129:8888;
                # 把host头传过去，后端服务程序将收到your.domain.name, 否则收到的是localhost:18080
#                 proxy_set_header Host $http_host;

                # 把cookie中的path部分从/api替换成/service
#                 proxy_cookie_path /login /;

                # 把cookie的path部分从localhost:18080替换成your.domain.name
#                 proxy_cookie_domain localhost:18080 tosim.top;
            }
         location /blogs {

                     proxy_pass http://192.168.108.129:8888;
                     }
         location /files {

                     proxy_pass http://192.168.108.129:8888;
                     }
         location /roles {

                     proxy_pass http://192.168.108.129:8888;
                     }

    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html;
        try_files $uri $uri/ /index.html;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
